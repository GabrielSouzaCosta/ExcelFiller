{"ast":null,"code":"var _jsxFileName = \"/home/gcosta/Projects/ExcelFiller/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.scss';\nimport { useEffect, useState } from 'react';\nimport Home from './components/pages/Home';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [table, setTable] = useState([]);\n  const [columns, setColumns] = useState([]);\n\n  function createTable() {\n    fetch(`/create_table/`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  function insertRow() {\n    setRows([...column.name]);\n  }\n\n  useEffect(() => {\n    fetch(`tables/1`, {\n      'method': 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json()).then(res => setColumns(res.columns)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          columns: columns,\n          insertRow: insertRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uX1Sse62z6szn6L0aYWa77TtUvg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gcosta/Projects/ExcelFiller/frontend/src/App.js"],"names":["useEffect","useState","Home","BrowserRouter","Route","Routes","App","table","setTable","columns","setColumns","createTable","fetch","headers","insertRow","setRows","column","name","then","res","json","catch","error","console","log"],"mappings":";;;AAAA,OAAO,YAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAIb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASU,WAAT,GAAuB;AACrBC,IAAAA,KAAK,CAAE,gBAAF,EAAmB;AACtB,gBAAU,MADY;AAEtBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFa,KAAnB,CAAL;AAMD;;AAED,WAASC,SAAT,GAAqB;AACnBC,IAAAA,OAAO,CAAC,CAAC,GAAGC,MAAM,CAACC,IAAX,CAAD,CAAP;AACD;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAE,UAAF,EAAa;AAChB,gBAAU,KADM;AAEhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFO,KAAb,CAAL,CAKGK,IALH,CAKQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALf,EAMCF,IAND,CAMMC,GAAG,IAAIT,UAAU,CAACS,GAAG,CAACV,OAAL,CANvB,EAOCY,KAPD,CAOOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAPhB;AAQD,GATQ,EASN,EATM,CAAT;AAYA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAM,UAAA,OAAO,EAAEb,OAAf;AAAwB,UAAA,SAAS,EAAEK;AAAnC;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvCQR,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import './App.scss';\nimport { useEffect, useState } from 'react';\nimport Home from './components/pages/Home';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\nfunction App() {\n\n  \n\n  const [table, setTable] = useState([])\n  const [columns, setColumns] = useState([])\n\n  function createTable() {\n    fetch(`/create_table/`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n  }\n\n  function insertRow() {\n    setRows([...column.name])\n  }\n\n  useEffect(() => {\n    fetch(`tables/1`, {\n      'method': 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }).then(res => res.json())\n    .then(res => setColumns(res.columns))  \n    .catch(error => console.log(error))\n  }, [])\n\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path='/' element={<Home columns={columns} insertRow={insertRow} />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}